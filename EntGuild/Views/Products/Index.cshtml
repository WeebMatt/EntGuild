@model EntGuild.Models.ProductGenreViewModel

@{
    ViewData["Title"] = "Index";
}

<!---->


<h1>Index</h1>
<!-- Admin Only: Start -->
<p>
    <a asp-action="Create">Create New</a>
</p>
<!-- Admin Only: End -->
<form asp-controller="Products" asp-action="Index" method="get">
    <p>
        <select asp-for="ProductGenre" id="choice1" asp-items="Model.Genres">
            <option value="">All</option>
        </select>
        <select asp-for="ProductGenre" id="choice2">
            <option data-option="1" value="M">
                Manga
            </option>
            <option data-option="1" value="M">
                Light Novel
            </option>
            <option data-option="1" value="M">
                Manhwa
            </option>
            <option data-option="2" value="M">
                RPG
            </option>
            <option data-option="2" value="M">
                JRPG
            </option>
            <option data-option="2" value="M">
                Fish Sim
            </option>
            <option data-option="3" value="M">
                Romance
            </option>
            <option data-option="3" value="M">
                Action
            </option>
            <option data-option="3" value="M">
                Adventure
            </option>
        </select>
        Title: <input type="text" name="SearchString" />
        <input type="submit" value="Search" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Products![0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products![0].Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products![0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products![0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products![0].subGenre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products![0].Published)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products![0].LastUpdatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products![0].LastUpdated)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Products!) {
        <tr>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">
                @Html.DisplayFor(modelItem => item.Name)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.subGenre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Published)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastUpdatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastUpdated)
            </td>
            <!-- Admin Only: Start -->
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
            <!-- Admin Only: End -->
        </tr>
}
    </tbody>
</table>
@section scripts    {
<script type="text/javascript" language="javascript">
    $("#choice1").change(function () {
        if (typeof $(this).data('options') === "undefined") {
            /*Taking an array of all options-2 and kind of embedding it on the select1*/
            $(this).data('options', $('#choice2 option').clone());
        }
        var id = $(this).val();
        var options = $(this).data('options').filter('[data-option=' + id + ']');
        $('#choice2').html(options);
        $('#choice2').selectpicker('refresh');
    });
</script>
}

